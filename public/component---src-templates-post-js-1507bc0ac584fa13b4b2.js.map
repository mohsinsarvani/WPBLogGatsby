{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["BlogPostTemplate","content","categories","tags","title","date","featureimage","author","className","src","alt","dangerouslySetInnerHTML","__html","style","marginTop","length","map","category","key","slug","to","name","tag","BlogPost","post","data","wordpressPost","featured_media","localFile","childImageSharp","resolutions","pageQuery"],"mappings":"iQASaA,G,OAAmB,SAAC,GAQ1B,IAPLC,EAOI,EAPJA,QACAC,EAMI,EANJA,WACAC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,KAEAC,GACI,EAFJC,OAEI,EADJD,cAEA,OACE,6BAASE,UAAU,WACjB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,sDACXJ,MAKH,yBAAKI,UAAU,8BACf,yBAAKC,IAAKH,EAAaG,IAAKC,IAAI,MAEpC,yBAAKF,UAAU,qBACd,yBAAKA,UAAU,WACpB,yBAAKA,UAAU,gBACd,yBAAKG,wBAAyB,CAAEC,OAAQX,KACvC,yBAAKY,MAAO,CAAEC,UAAU,SACxB,2BAAIT,GACKH,GAAcA,EAAWa,OACzB,6BACG,0CACA,wBAAIP,UAAU,WACXN,EAAWc,KAAI,SAAAC,GAAQ,OACtB,wBAAIC,IAAQD,EAASE,KAAd,OACL,kBAAC,IAAD,CAAMC,GAAE,eAAiBH,EAASE,KAA1B,KACLF,EAASI,YAMlB,KACHlB,GAAQA,EAAKY,OACV,6BACA,oCACA,wBAAIP,UAAU,WACXL,EAAKa,KAAI,SAAAM,GAAG,OACX,wBAAIJ,IAAQI,EAAIH,KAAT,OACL,kBAAC,IAAD,CAAMC,GAAE,SAAWE,EAAIH,KAAf,KAAyBG,EAAID,YAK3C,SAKZ,yBAAKb,UAAU,aACnB,kBAAC,IAAD,KAAQ,uEACR,oFAoCae,UAzBE,SAAC,GAAc,IACPC,EADM,EAAXC,KACVC,cAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQtB,MAAUoB,EAAKpB,MAAV,YACb,kBAACJ,EAAD,CACEC,QAASuB,EAAKvB,QACdC,WAAYsB,EAAKtB,WACjBC,KAAMqB,EAAKrB,KACXC,MAAOoB,EAAKpB,MACZC,KAAMmB,EAAKnB,KACXE,OAAQiB,EAAKjB,OACbD,aAAckB,EAAKG,eAAeC,UAAUC,gBAAgBC,gBAc7D,IAAMC,EAAS","file":"component---src-templates-post-js-1507bc0ac584fa13b4b2.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Footer from '../components/Footer'\nimport Img from 'gatsby-image'\n\n\nexport const BlogPostTemplate = ({\n  content,\n  categories,\n  tags,\n  title,\n  date,\n  author,\n  featureimage\n}) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container content\">\n        <div className=\"columns\">\n          <div className=\"column is-12\">\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\n              {title}\n            </h1>\n           </div>\n          </div>\n        </div> \n            <div className=\"full-width-image-container\">\n            <img src={featureimage.src} alt=\"\"/>\n            </div>\n        <div className=\"container content\">\n        \t<div className=\"columns\">\n\t\t\t\t<div className=\"column is-12\">               \n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: content }} />\n\t\t\t\t\t\t<div style={{ marginTop: `4rem` }}>\n\t\t\t\t\t\t<p>{date}</p>\n              {categories && categories.length ? (\n\t              <div>\n                  <h4>Categories</h4>\n                  <ul className=\"taglist\">\n                    {categories.map(category => (\n                      <li key={`${category.slug}cat`}>\n                        <Link to={`/categories/${category.slug}/`}>\n                          {category.name}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                  </div>\n              ) : null}\n              {tags && tags.length ? (\n                  <div>\n                  <h4>Tags</h4>\n                  <ul className=\"taglist\">\n                    {tags.map(tag => (\n                      <li key={`${tag.slug}tag`}>\n                        <Link to={`/tags/${tag.slug}/`}>{tag.name}</Link>\n                      </li>\n                    ))}\n                  </ul>\n                  </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n\t\t<Footer><p>Â© 2019 Zakir Sajib. All Rights Reserved.</p>\n\t\t<p>Built with WordPress, Gatsby, GitHub and Netlify</p></Footer>\n\t  </div>\n    </section>\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  title: PropTypes.string,\n}\n\nconst BlogPost = ({ data }) => {\n  const { wordpressPost: post } = data\n\n  return (\n    <Layout>\n      <Helmet title={`${post.title} | Blog`} />\n      <BlogPostTemplate\n        content={post.content}\n        categories={post.categories}\n        tags={post.tags}\n        title={post.title}\n        date={post.date}\n        author={post.author}\n        featureimage={post.featured_media.localFile.childImageSharp.resolutions}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  fragment PostFields on wordpress__POST {\n    id\n    slug\n    content\n    date(formatString: \"MMMM DD, YYYY\")\n    title\n  }\n  query BlogPostByID($id: String!) {\n    wordpressPost(id: { eq: $id }) {\n      id\n      title\n      slug\n      content\n      date(formatString: \"MMMM DD, YYYY\")\n      categories {\n        name\n        slug\n      }\n      tags {\n        name\n        slug\n      }\n      author {\n        name\n        slug\n      }\n      featured_media{\n\t    localFile{\n\t\t    childImageSharp{\n\t\t\t    resolutions(width:1152, height:450){\n\t\t\t\t    src\n\t\t\t\t    width\n\t\t\t\t    height\n\t\t\t    }\n\t\t    }\n\t    }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}